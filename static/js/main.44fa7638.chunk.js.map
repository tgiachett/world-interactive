{"version":3,"sources":["Components/SuperStructure/DataPanel/SearchBar/SearchBar.jsx","Components/SuperStructure/DataPanel/DataPanelView.jsx","Components/SuperStructure/DataPanel/DataPanelContainer.jsx","Components/SuperStructure/Map/SvgContainer/Path/PathView.jsx","Components/SuperStructure/Map/SvgContainer/Path/PathContainer.jsx","Components/SuperStructure/Map/SvgContainer/SvgLoader.jsx","Components/SuperStructure/Map/SvgContainer/SvgContainer.jsx","Components/SuperStructure/Map/MapView.jsx","Components/SuperStructure/Map/MapContainer.jsx","Components/SuperStructure/SuperStructureView.jsx","Components/SuperStructure/SuperStructureContainer.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","preventDefault","setState","inputValue","target","value","handleSubmit","runner","fetch","concat","state","then","res","json","result","data","dataRes","error","err","JSON","stringify","isRecieved","prevProps","prevState","length","react_default","a","createElement","onSubmit","type","size","onChange","id","map","k","key","name","React","Component","DataPanelView","DataPanel_SearchBar_SearchBar","DataPanelContainer","DataPanel_DataPanelView","PathView","stroke","fill","d","activecountrydata","PathContainer","element","isColor","pfill","isHighlighted","alpha2Code","indexOf","dataname","Path_PathView","undefined","svgData","require","SvgLoader","xmnlns","attributes","xmlns","version","height","width","strokeLinejoin","StrokeLinejoin","viewBox","children","p","i","countryCode","Path_PathContainer","svgelementtype","nodeType","atttributes","SvgContainer","SvgContainer_SvgLoader","MapView","Map_SvgContainer_SvgContainer","MapContainer","Map_MapView","SuperStructureView","style","display","flexDirection","DataPanel_DataPanelContainer","Map_MapContainer","SuperStructureContainer","delivery","apiData","SuperStructure_SuperStructureView","App","className","SuperStructure_SuperStructureContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44fa7638.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass SearchBar extends React.Component {\n\n     constructor(props) {\n        super(props);\n         this.state = {\n             inputValue: \"https://restcountries.eu/rest/v2/name/Italy\",\n             dataRes: [],\n             error: '',\n             isRecieved: false\n         };\n     }\n\n\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            inputValue: e.target.value\n        });\n        \n        \n        //fetch\n                        \n    }\n\n    handleSubmit = (e) => {\n        this.props.runner('');\n        e.preventDefault();\n        \n        fetch(`${this.state.inputValue}?fields=name;alpha2Code`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    \n                    const data = result;\n                    this.props.runner(data);\n                    this.setState({\n                        dataRes: data\n                    });\n                    \n                },\n                (error) => {\n                    const err = JSON.stringify(error);\n                    this.setState({\n                        err\n                    });\n                    \n                }\n            );\n        \n    }\n\n \n    componentDidUpdate(prevProps, prevState) {\n        if(this.state.dataRes !== prevState.dataRes) {\n            if(this.state.dataRes.length > 0) {\n            this.setState({\n                isRecieved: true\n            });\n            }\n        }\n    }\n\n    render() {\n        \nreturn (\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <label>\n                  Query: \n                  <input type=\"text\" size={60} value={this.state.inputValue} onChange={this.handleChange}/>\n                </label>\n                <input type=\"submit\" value=\"Submit\"/>\n              </form>\n              <div id=\"results\">\n                {(this.state.isRecieved) ? (this.state.dataRes.map((a ,k) => <div key={k}> {a.name}</div>)) : null }\n              </div>\n            </div>\n        );\n}\n}\n\n    \n\n\n        \n\n\n\nexport default SearchBar;\n","import React from 'react';\nimport SearchBar from './SearchBar/SearchBar';\n\nclass DataPanelView extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n            <div>\n              <SearchBar runner={this.props.runner}/>\n            </div>\n        );\n}\n}\n\n    \n\n\n        \n\n\n\nexport default DataPanelView;\n","import React from 'react';\nimport DataPanelView from './DataPanelView';\n\n\n\n// import SuperStructureView from './SuperStructureView';\n// import MapContainer from './Map/MapContainer';\n// import DataPanelContainer from './DataPanel/DataPanelContainer';\n\nclass DataPanelContainer extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n            <div>\n              <DataPanelView runner={this.props.runner}>\n                \n              </DataPanelView>\n            </div>\n        );\n}\n}\n\n    \n\n\n        \n\n\n\nexport default DataPanelContainer;\n","import React from 'react';\n\n\nclass PathView extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n\n    <path\n      stroke={this.props.stroke}\n      fill={this.props.fill}\n      id={this.props.id}\n      d={this.props.d}\n      activecountrydata={this.props.activecountrydata}\n      \n       /* runner={this.props.runner ? this.props.runner : false} */\n    >\n      \n    \n      \n            </path>\n        );\n}\n}\n\nexport default PathView;\n","import React from 'react';\nimport PathView from './PathView';\n\n\nclass PathContainer extends React.Component {\n\n     constructor(props) {\n         super(props);\n         this.state = {\n             element: {\n             isColor: this.props.pfill,\n             isHighlighted: false\n             }\n         };\n     }\n\n    //methods\n    componentDidUpdate(prevProps, prevState) {\n      \n\n        if (this.props.activecountrydata !== prevProps.activecountrydata) {\n             \n            this.setState({\n                element: {\n                    isHighlighted: false,\n                    isColor: this.props.pfill\n                }\n            });\n            if(this.props.activecountrydata !== '') {       \n                 let countryApiArray = this.props.activecountrydata.map(a => a.alpha2Code);\n           \n                 if ((countryApiArray.indexOf(this.props.dataname) !== -1)) {\n                 this.setState({\n                     element: {\n                         isHighlighted: true,\n                         isColor: '#ffa500'\n                     }\n                   });\n                 }\n            }\n        }\n    } \n           \n        \n    \n\n    \n    render() {\n\nreturn (\n\n    <PathView\n      stroke={this.props.stroke}\n      fill={this.state.element.isColor}\n      id={this.props.id}\n      d={this.props.d}\n      runner={this.props.runner ? this.props.runner : undefined}\n      activecountrydata={this.props.activecountrydata}\n    >\n     \n    \n      \n     </PathView>\n        );\n}\n}\n\nexport default PathContainer;\n","import React from 'react';\nimport PathContainer from './Path/PathContainer';\nconst svgData = require('./assets/world.min.json');\n\n// import SuperStructureView from './SuperStructureView';\n// import MapContainer from './Map/MapContainer';\n// import DataPanelContainer from './DataPanel/DataPanelContainer';\n\nclass SvgLoader extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n\n    render() {\n       \n// I am in the process of trying \nreturn (\n    <svg\n      xmnlns={svgData.attributes.xmlns}\n      version={svgData.attributes.version}\n      id={this.props.id }\n      height={this.props.height ? this.props.height : ((svgData.attributes.height) ? svgData.attributes.height : undefined)}\n      width={this.props.width ? this.props.width : ((svgData.attributes.width) ? svgData.attributes.width : undefined)}\n      strokeLinejoin={this.props.StrokeLinejoin ? this.props.StrokeLinejoin : ((svgData.attributes['stroke-line-join']) ? svgData.attributes['stroke-line-join'] : undefined)}\n      stroke={this.props.stroke ? this.props.stroke : ((svgData.attributes.stroke) ? svgData.attributes.stroke : undefined)}\n      fill={this.props.fill ? this.props.fill : ((svgData.attributes.fill) ? svgData.attributes.fill : undefined)}\n      viewBox={this.props.viewBox ? this.props.viewBox : (svgData.attributes.viewBox ? svgData.attributes.viewBox : undefined)}\n    >\n      {/* filter */}\n    {svgData.children.map((p, i) => {\n        const countryCode = p.attributes['data-id'];\n        return (\n        <PathContainer\n        svgelementtype={p.name}\n        nodeType={p.type}\n        pfill={p.attributes.fill}\n        stroke={p.attributes.stroke ? p.atttributes.stroke : undefined}\n\tkey={i}\n\tid={p.attributes.id}\n        dataname={countryCode}\n        d={p.attributes.d}\n        runner={this.props.runner ? this.props.runner : undefined}\n        activecountrydata={this.props.activecountrydata}\n          \n          \n         \n        />\n        );\n    })}\n      \n            </svg>\n        );\n}\n}\n\nexport default SvgLoader;\n//apiCountryArray[countryName] !== -1\n//fill={(!apiCountryArray) ? '#ffa500' : (p.attributes.fill ? p.attributes.fill : undefined)}\n//p.attributes.fill ? p.attributes.fill : undefined\n//(apiCountryArray === undefined) ? p.attributes.fill : ((apiCountryArray[countryName] !== -1) ? '#ffa500' : (p.attributes.fill ? p.attributes.fill : undefined))\n\n\n","import React from 'react';\nimport SvgLoader from './SvgLoader';\n\n// import SuperStructureView from './SuperStructureView';\n// import MapContainer from './Map/MapContainer';\n// import DataPanelContainer from './DataPanel/DataPanelContainer';\n\nclass SvgContainer extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n            <div>\n              \n              <SvgLoader\n                activecountrydata={this.props.activecountrydata}\n                viewBox={'0 0 2000 1001'}\n                height={500}\n                width={1000}\n              />\n            </div>\n        );\n}\n}\n\nexport default SvgContainer;\n","import React from 'react';\nimport SvgContainer from './SvgContainer/SvgContainer';\n\n// import SuperStructureView from './SuperStructureView';\n// import MapContainer from './Map/MapContainer';\n// import DataPanelContainer from './DataPanel/DataPanelContainer';\n\nclass MapView extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n    // style={{ float: 'left'}}>\n    <div>\n              <SvgContainer activecountrydata={this.props.activecountrydata}/>\n            </div>\n        );\n}\n}\n\n    \n \nexport default MapView;\n","import React from 'react';\n\nimport MapView from './MapView';\n\nclass MapContainer extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n            <div>\n              {/* <DataPanelContainer/> */}\n              <MapView activecountrydata={this.props.activecountrydata} />\n            </div>\n        );\n}\n}\n\n    \n \nexport default MapContainer;\n","import React from 'react';\nimport DataPanelContainer from './DataPanel/DataPanelContainer';\nimport MapContainer from './Map/MapContainer';\n\nclass SuperStructureView extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    //methods\n\n    render() {\n\nreturn (\n    <div style={{display: 'flex', flexDirection: 'row'}}>\n              <DataPanelContainer runner={this.props.runner}/>\n      <MapContainer activecountrydata={this.props.activecountrydata} />\n            </div>\n        );\n}\n}\n\n    \n \nexport default SuperStructureView;\n","import React from 'react';\n\n import SuperStructureView from './SuperStructureView';\n// import MapContainer from './Map/MapContainer';\n// import DataPanelContainer from './DataPanel/DataPanelContainer';\n\nclass SuperStructureContainer extends React.Component {\n\n     constructor(props) {\n         super(props);\n         this.state = {\n             apiData: ''\n         };\n     }\n\n    //methods\n    runner = (delivery) => {\n        this.setState({\n            apiData: delivery\n        });\n    }\n    \n    render() {\n\nreturn (\n            <div>\n              <SuperStructureView activecountrydata={this.state.apiData} runner={this.runner}/>\n            </div>\n        );\n}\n}\n\n    \n\n\n        \n\n\n\nexport default SuperStructureContainer;\n\n    \n    \n","import React, { Component } from 'react';\nimport './App.css';\nimport SuperStructureContainer from './Components/SuperStructure/SuperStructureContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SuperStructureContainer/>\n          \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}